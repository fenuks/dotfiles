[user]
name = fenuks
email = fenuks
[core]
    excludesfile = ~/.config/git/ignore
    attributesfile = ~/.config/git/attributes
    quotePath = false
    ; pager = delta
; [interactive]
;     diffFilter = delta --color-only | less -R
[credential]
    helper = cache
[advice]
    detachedHead = false
[alias]
    ahead = !git lg --oneline "origin/$(git default)..HEAD"
    authors = shortlog --summary --numbered
    amr = "!f() { [ -z \"$GIT_PREFIX\" ] || cd \"$GIT_PREFIX\" & source ~/.config/shells/git/functions.bash && amr $@; }; f"
    ar = "!f() { [ -z \"$GIT_PREFIX\" ] || cd \"$GIT_PREFIX\" & source ~/.config/shells/git/functions.bash && ar $@; }; f"
    au = add --update
    aur = "!f() { [ -z \"$GIT_PREFIX\" ] || cd \"$GIT_PREFIX\" && PKGVER=$(grep -oP 'pkgver ?= ?\\K.+' .SRCINFO)-$(grep -oP 'pkgrel ?= ?\\K.+' .SRCINFO); git commit -m \"Update to ${PKGVER}\" $@; }; f"
    aurclone = "!f() { [ -z \"$GIT_PREFIX\" ] || cd \"$GIT_PREFIX\" && git clone https://aur.archlinux.org/$@; }; f"
    aursshclone = "!f() { [ -z \"$GIT_PREFIX\" ] || cd \"$GIT_PREFIX\" && git clone ssh://aur@aur.archlinux.org/$@; }; f"
    base-rev = !git merge-base "$(git default)" HEAD
    br = branch
    brd = !git branch --merged | grep -Ev '(^\\*|master|develop|main)' | xargs git branch -d
    brm = branch --merged
    brnm = branch --no-merged
    ca = commit --amend
    cam = commit -a --amend
    cat = "!f() { [ -z \"$GIT_PREFIX\" ] || cd \"$GIT_PREFIX\" && git show $(git rev-list --max-count=1 --all -- \"$@\")^:\"$@\"; }; f"
    ci = commit
    cleanse = !find -name '*.orig' -delete
    cm = commit -m
    co = checkout
    coum = !f() { [ -z \"$GIT_PREFIX\" ] || cd \"$GIT_PREFIX\" && git reset $@; git checkout $@; }; f"
    count = rev-list --count HEAD
    cod = !git checkout "$(git default)"
    d = diff --find-copies-harder
    vd = !git diff --find-copies-harder | vim -
    dd = !git diff "$(git merge-base $(git default) HEAD) $@"
    default = !git symbolic-ref refs/remotes/origin/HEAD | sed 's|refs/remotes/origin/||'
    default-remote = !LANG=en git remote show origin | grep 'HEAD branch' | sed 's/.*: //'
    ds = diff --find-copies-harder --staged
    dt = difftool --tool=difftastic
    grepall = "!f() { [ -z \"$GIT_PREFIX\" ] || cd \"$GIT_PREFIX\" && git grep -P \"$@\" $(git rev-list --all); }; f"
    first = !git lg $(git default).. | tail -1
    fixup = "!git log $(git default).. --pretty=format:'%h %s' --no-merges | fzf | cut -c -7 | xargs -o git commit --fixup"
    last = lg -1 HEAD
    last-tag = describe --tags --abbrev=0
    lg = log --graph --color=auto --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    lgd = !git lg $(git default)..
    lga = !git log --all --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit | less -r
    ls = ls-tree --name-only --full-tree -r HEAD
    local = log @{upstream}..@
    mtk = mergetool --tool=kdiff3
    mtv = mergetool --tool=nvimdiff
    pff = push --force-with-lease
    pullf = !git fetch --all && git reset --hard "origin/$(git branch --show-current)"
    recent = !git branch --sort=-committerdate --format='%(committerdate:relative)%09%(refname:short)' | head -10
    r1 = reset --soft HEAD^
    rsd = !git reset --soft "$(git default)"
    rba = rebase --abort
    rbc = rebase --continue
    rbd = !git rebase "$(git default)"
    rbdi = !git rebase --interactive "$(git default)"
    rbb = !git rebase -i "$(git first | awk '{print $2}')^"
    rfiles = !git diff --name-only "${1:-$(git default)}"
    root = rev-parse --show-toplevel
    rstat = !git diff --stat "${1:-$(git default)}"
    r-upstream = !git reset --hard "origin/$(git branch --show-current)"
    setuphooks = config core.hooksPath ~/.config/git/hooks/
    st = status -s
    remote-url = remote get-url origin
    unpushed = log @{u}..
    track = !git branch --set-upstream-to="origin/$(git branch --show-current)"
[blame]
    ; ignoreRevsFile = .gitignorerevs
    markIgnoredLines = true
    markUnblamableLines = true
[color]
    ui = auto
[push]
    default = current
    followTags = true
[difftool]
    trustExitCode = true
    prompt = false
[difftool "vimdir"]
    cmd = vim -f '+next' '+execute \"DirDiff\" argv(0) argv(1)' $LOCAL $REMOTE
[difftool "difftastic"]
    cmd = difft "$LOCAL" "$REMOTE"
[mergetool]
    trustExitCode = true
[merge]
    conflictStyle = zdiff3
[rerere]
    enabled = true
[remote-hg]
    hg-git-compat = true
    track-branches = false
[pull]
    rebase = true
    hg-git-compat = true
    track-branches = false
    default = current
[fetch]
    prune = true
    ; pruneTags = true
[filter "lfs"]
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
    clean = git-lfs clean -- %f
[diff]
    submodule = log
    colorMoved = true
    colorMovedWs = allow-indentation-change
    mnemonicprefix = true
    algorithm = histogram
[diff "zip"]
    textconv = unzip -c -a
[diff "tgz"]
    binary = true
    textconv = tar -xvzO -f
[diff "gz"]
    binary = true
    textconv = gunzip -c
[diff "graphtage"]
    cmd = graphtage -e
[diff "openapi"]
    xfuncname = "^\\s*([A-Z].*:)$"
[diff "swift"]
    xfuncname = ^[ \t]*((struct|class|actor|func|extension)[ \t].*)$
[log]
    date = local
[pager]
    difftool = true
[tag]
    sort = version:refname
[versionsort]
    suffix = "_BETA"
    suffix = "_RC"
[url "https://invent.kde.org/"]
    insteadOf = kde:
[url "ssh://git@invent.kde.org/"]
    pushInsteadOf = kde:
[submodule]
	recurse = true
[init]
	defaultBranch = main
[includeIf "gitdir:~/Praca/"]
    path = ~/.config/git/work.config
