# adapted from vim-snippets
priority -50

snippet fn "function"
	function! ${1:`expand('%') =~ 'autoload' ? substitute(matchstr(expand('%:p'),'autoload/\zs.*\ze.vim'),'[/\\]','#','g').'#' : ''`}${2:function_name}(${3})
		${0}
	endfunction
endsnippet

snippet try "try ... catch statement"
	try
		${1:${VISUAL}}
	catch ${2}
		${0}
	endtry
endsnippet

snippet for "for ... in loop"
	for ${1} in ${2}
		${0:${VISUAL}}
	endfor
endsnippet

snippet forin "for [key, value] in loop"
	for [${1},${2}] in items(${3})
		${0}
		unlet $1 $2
	endfor
endsnippet

snippet while "while loop"
	while ${1}
		${0:${VISUAL}}
	endwhile
endsnippet

snippet if "if statement"
	if ${1}
		${0:${VISUAL}}
	endif
endsnippet

snippet ife "if ... else statement"
	if ${1}
		${2:${VISUAL}}
	else
		${0}
	endif
endsnippet

snippet au "augroup ... autocmd block"
	augroup ${1:AU_NAME}
		autocmd!
		autocmd ${2:BufRead,BufNewFile} ${3:*.ext,*.ext3|<buffer[=N]>} ${0}
	augroup END
endsnippet

snippet auv "augroupvisual ... autocmd block with visual placeholder"
	augroup ${1:AU_NAME}
		autocmd!
		${0:${VISUAL}}
	augroup END
endsnippet

